/*
 * SaaS fulfillment APIs, version 2
 * This spec details the APIs that enable partners to sell their SaaS applications in the AppSource marketplace and the Azure Marketplace. These APIs are a requirement for transactable SaaS offers on the AppSource and Azure Marketplace.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.microsoft.azure.marketplace;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
/**
 * UsageEvent
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-19T20:04:00.284-07:00[America/Los_Angeles]")
public class UsageEvent {
  @SerializedName("resourceId")
  private UUID resourceId = null;

  @SerializedName("quantity")
  private Long quantity = null;

  @SerializedName("dimension")
  private String dimension = null;

  @SerializedName("effectiveStartTime")
  private OffsetDateTime effectiveStartTime = null;

  @SerializedName("planId")
  private String planId = null;

  public UsageEvent resourceId(UUID resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Subscription ID for the event
   * @return resourceId
  **/
  @Schema(description = "Subscription ID for the event")
  public UUID getResourceId() {
    return resourceId;
  }

  public void setResourceId(UUID resourceId) {
    this.resourceId = resourceId;
  }

  public UsageEvent quantity(Long quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Number of units consumed
   * @return quantity
  **/
  @Schema(description = "Number of units consumed")
  public Long getQuantity() {
    return quantity;
  }

  public void setQuantity(Long quantity) {
    this.quantity = quantity;
  }

  public UsageEvent dimension(String dimension) {
    this.dimension = dimension;
    return this;
  }

   /**
   * Dimension identifier
   * @return dimension
  **/
  @Schema(description = "Dimension identifier")
  public String getDimension() {
    return dimension;
  }

  public void setDimension(String dimension) {
    this.dimension = dimension;
  }

  public UsageEvent effectiveStartTime(OffsetDateTime effectiveStartTime) {
    this.effectiveStartTime = effectiveStartTime;
    return this;
  }

   /**
   * Time in UTC when the usage event occurred
   * @return effectiveStartTime
  **/
  @Schema(description = "Time in UTC when the usage event occurred")
  public OffsetDateTime getEffectiveStartTime() {
    return effectiveStartTime;
  }

  public void setEffectiveStartTime(OffsetDateTime effectiveStartTime) {
    this.effectiveStartTime = effectiveStartTime;
  }

  public UsageEvent planId(String planId) {
    this.planId = planId;
    return this;
  }

   /**
   * Plan associated with the purchased offer
   * @return planId
  **/
  @Schema(description = "Plan associated with the purchased offer")
  public String getPlanId() {
    return planId;
  }

  public void setPlanId(String planId) {
    this.planId = planId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageEvent usageEvent = (UsageEvent) o;
    return Objects.equals(this.resourceId, usageEvent.resourceId) &&
        Objects.equals(this.quantity, usageEvent.quantity) &&
        Objects.equals(this.dimension, usageEvent.dimension) &&
        Objects.equals(this.effectiveStartTime, usageEvent.effectiveStartTime) &&
        Objects.equals(this.planId, usageEvent.planId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceId, quantity, dimension, effectiveStartTime, planId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageEvent {\n");
    
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("    effectiveStartTime: ").append(toIndentedString(effectiveStartTime)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
